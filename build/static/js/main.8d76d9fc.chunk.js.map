{"version":3,"sources":["helperFn/boardFunctions.js","Components/Square/squareUtility.js","Components/Square/squareBorders/topLeft.js","Components/Square/squareBorders/topRight.js","Components/Square/squareBorders/Top.js","Components/Square/squareBorders/bottomLeft.js","Components/Square/squareBorders/bottomRight.js","Components/Square/squareBorders/Bottom.js","Components/Square/squareBorders/Left.js","Components/Square/squareBorders/Right.js","Components/Square/squareBorders/None.js","Components/Square/squareState/Active.js","Components/Square/squareState/Danger.js","Components/Square/squareState/Disabled.js","Components/Square/square.js","Components/row.js","Components/board.js","Components/data/MyContext.js","Components/PlayerName/PlayerName.js","Components/Rank/Rank.js","Components/game.js","index.js"],"names":["randomlyGeneratedValue","min","max","Math","floor","random","verifyRow","grid","row","val","rowOfNums","Array","from","x","Number","includes","verifyArr","forEach","push","length","verifyCol","col","verifyBox","startRow","parseInt","startCol","r","c","isValid","num","verifySudoku","newGrid","difficulty","minToRemove","maxToRemove","entriesToRemove","entriesRemoved","indexEntries","entryRemoved","splice","arr","i","innerArr","j","a","solve","shuffled","choice","boxLookupAssignment","boxLookup","rowArr","colArr","disabled","buttonNonDisabled","buttonDisabled","rowNum","colNum","SquareBorderTopLeft","styled","button","props","borderColor","modify","children","DisabledTopLeft","SquareBorderTopRight","DisabledTopRight","SquareBorderTop","DisabledTop","SquareBorderBottomLeft","DisabledBottomLeft","SquareBorderBottomRight","DisabledBottomRight","SquareBorderBottom","DisabledBottom","SquareBorderLeft","DisabledLeft","SquareBorderRight","DisabledRight","noBorder","DisabledNoBorder","squareBtnLight","componentName","handleClick","React","createElement","onClick","className","squareBtnDanger","disabledBtn","initialSquare","edit","valid","rowTopLeft","topRightRange","topBorder","boxConditionLookup","tl","tr","bl","br","t","b","l","setBorderColor","borderColorLookup","Square","handleKeyPress","e","number","key","fn","setState","pressKey","state","this","boxColor","none","boxLookupDisabled","autoFocus","onBlur","type","pattern","inputMode","onKeyDown","value","Component","Row","cells","map","cell","cellNum","gridEntry","renderSquare","Board","generateBoard","populateGameGrid","gridNewly","interval","displayError","beginTimer","timeUntilDismissed","bind","showInvalidKeyPress","handleTimeChange","clearInterval","prevProps","prevState","newGame","solvedGrid","solvedButton","isEqual","setCom","setInterval","gridCopy","cloneDeep","indexOf","error","theme","open","complete","pause","data","createContext","PlayerName","greet","record","useContext","Data","changeHandle","setName","target","useState","displayName","setDisplay","useTimer","time","start","reset","isRunning","Button","variant","account","player","fetch","method","body","JSON","stringify","headers","then","result","alert","catch","err","console","log","InputGroup","id","onChange","FormControl","placeholder","aria-label","aria-describedby","Prepend","Text","Form","Control","readOnly","name","setControlTime","Rank","setPlayer","allPlayer","useEffect","res","json","resData","count","temp","Table","striped","bordered","hover","Game","submit","controlTime","changeDifficulty","diff","newGameAccepted","openNewGame","handleDifficultyClick","openDifficulty","handleCreditsClick","openCredits","handleRulesClick","openRules","handleNewGameClick","helpButton","openSolve","handleSudokuSolver","currentGrid","el","row1","col1","noSolve","changeName","copyGrid","MyContext","Provider","toggle","checked","Alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d76d9fc.chunk.js","sourcesContent":["import {useState} from 'react';\nfunction randomlyGeneratedValue(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\nconst removingEntries = (newGrid, difficulty) => {\n  \n  let minToRemove;\n  let maxToRemove;\n  if (difficulty === 'Beginner') {\n    minToRemove = 1;\n    maxToRemove = 1;\n  } else if (difficulty === 'Easy') {\n    minToRemove = 3;\n    maxToRemove = 3;\n  } else if (difficulty === 'Normal') {\n    minToRemove = 4;\n    maxToRemove = 6;\n  } else if (difficulty === 'Hard') {\n    minToRemove = 7;\n    maxToRemove = 10;\n  }\n\n  for (let row = 0; row < newGrid.length; row += 1) {\n    let entriesToRemove = randomlyGeneratedValue(minToRemove, maxToRemove);\n    let entriesRemoved = 0;\n    let indexEntries = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\n    while (entriesRemoved < entriesToRemove) {\n      let entryRemoved = randomlyGeneratedValue(0, indexEntries.length);\n      newGrid[row].splice(indexEntries[entryRemoved], 1, null);\n      indexEntries.splice(entryRemoved, 1);\n      entriesRemoved += 1;\n    }\n  }\n};\n\nconst createGrid = () => {\n  let arr = [];\n\n  for (let i = 0; i < 9; i++) {\n    let innerArr = [];\n    for (let j = 0; j < 9; j++) {\n      innerArr.push(null);\n    }\n    arr.push(innerArr);\n  }\n\n  return arr;\n};\n\n// I could be wrong here, but we only need to check one condition\n// If this condition fails, then they all fail\nconst verifyRow = (grid, row, val = null) => {\n  const rowOfNums = Array.from(grid[row], x => Number(x));\n  if (!val) {\n    let verifyArr = [];\n    rowOfNums.forEach(row => {\n      if (!verifyArr.includes(row)) {\n        verifyArr.push(row);\n      }\n    });\n    return verifyArr.length === grid[row].length;\n  } else {\n    if (rowOfNums.includes(Number(val))) {\n      return false;\n    }\n    return true;\n  }\n};\n\nconst verifyCol = (grid, col, val = null) => {\n  for (let row = 0; row < 9; row++) {\n    if (Number(grid[row][col]) === Number(val)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst verifyBox = (grid, row, col, val = null) => {\n  let startRow = parseInt(row / 3) * 3;\n  let startCol = parseInt(col / 3) * 3;\n\n  for (let r = startRow; r < startRow + 3; r++) {\n    for (let c = startCol; c < startCol + 3; c++) {\n      if (Number(grid[r][c]) === Number(val)) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst isValid = (grid, row, col, num = null) => {\n  if (\n    verifyBox(grid, row, col, num) &&\n    verifyCol(grid, col, num) &&\n    verifyRow(grid, row, num)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nconst verifySudoku = grid => {\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (!isValid(grid, row, col)) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nconst shuffle = a => {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\nconst solve = (grid, shuffled) => {\n\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (grid[row][col] === null) {\n        shuffled.forEach(choice => {\n          if (isValid(grid, row, col, choice)) {\n            grid[row][col] = choice;\n            solve(grid,shuffled)\n            if (!verifySudoku(grid)) {\n              grid[row][col] = null\n            } else {\n              return grid;\n            }\n          }\n        });\n        return grid ;\n      }\n    }\n  }\n  \n  \n};\n\n\nexport default {\n  randomlyGeneratedValue,\n  verifyRow,\n  verifyCol,\n  verifyBox,\n  removingEntries,\n  createGrid,\n  isValid,\n  verifySudoku,\n  shuffle,\n  solve\n};\n","const boxLookupAssignment = (boxLookup, rowArr, colArr, disabled, buttonNonDisabled, buttonDisabled) => {\n  for (let rowNum = 0; rowNum < rowArr.length; rowNum++) {\n    for (let colNum = 0; colNum < colArr.length; colNum++) {\n      boxLookup[`${rowArr[rowNum]} ${colArr[colNum]}`] = !disabled\n        ? buttonNonDisabled\n        : buttonDisabled;\n    }\n  }\n};\n\nexport default boxLookupAssignment;\n","import styled from 'styled-components';\nconst SquareBorderTopLeft = styled.button`\n  border-top: ${props => `0.2em ${props.borderColor} solid`};\n  border-left: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledTopLeft = styled(SquareBorderTopLeft)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n    SquareBorderTopLeft,\n    DisabledTopLeft\n}","import styled from 'styled-components';\nconst SquareBorderTopRight = styled.button`\n  border-top: ${props => `0.2em ${props.borderColor} solid`};\n  border-right: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledTopRight = styled(SquareBorderTopRight)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  SquareBorderTopRight,\n  DisabledTopRight,\n};\n","import styled from 'styled-components';\nconst SquareBorderTop = styled.button`\n  border-top: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledTop = styled(SquareBorderTop)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n    SquareBorderTop,\n    DisabledTop\n}","import styled from 'styled-components';\nconst SquareBorderBottomLeft = styled.button`\n  border-bottom: ${props => `0.2em ${props.borderColor} solid`};\n  border-left: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledBottomLeft = styled(SquareBorderBottomLeft)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  SquareBorderBottomLeft,\n  DisabledBottomLeft,\n};\n","import styled from 'styled-components';\nconst SquareBorderBottomRight = styled.button`\n  border-bottom: ${props => `0.2em ${props.borderColor} solid`};\n  border-right: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledBottomRight = styled(SquareBorderBottomRight)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  SquareBorderBottomRight,\n  DisabledBottomRight,\n};","import styled from 'styled-components';\nconst SquareBorderBottom = styled.button`\n  border-bottom: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n \nconst DisabledBottom = styled(SquareBorderBottom)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  SquareBorderBottom,\n  DisabledBottom,\n};\n","import styled from 'styled-components';\nconst SquareBorderLeft = styled.button`\n  border-left: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledLeft = styled(SquareBorderLeft)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  SquareBorderLeft,\n  DisabledLeft,\n};\n","import styled from 'styled-components';\nconst SquareBorderRight = styled.button`\n  border-right: ${props => `0.2em ${props.borderColor} solid`};\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledRight = styled(SquareBorderRight)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  SquareBorderRight,\n  DisabledRight,\n};\n","import styled from 'styled-components';\nconst noBorder = styled.button`\n  color: ${props => (props.modify ? null : '#fff')};\n  opacity: ${props => (props.children !== null ? 0.65 : 1)};\n`;\n\nconst DisabledNoBorder = styled(noBorder)`\n  &&& {\n    cursor: not-allowed;\n  }\n`;\n\nexport default {\n  noBorder,\n  DisabledNoBorder,\n};\n","import React from 'react';\nconst squareBtnLight = (componentName, num, handleClick, borderColor) => {\n  return React.createElement(\n    componentName,\n    {\n      onClick: handleClick,\n      className: 'square light',\n      modify: true,\n      borderColor,\n    },\n    num,\n  );\n};\n\nexport default squareBtnLight","import React from 'react';\nconst squareBtnDanger = (componentName, num, handleClick, borderColor) => {\n  return React.createElement(\n    componentName,\n    { onClick: handleClick, className: 'square danger', borderColor },\n    num,\n  );\n};\n\nexport default squareBtnDanger;","import React from 'react';\nconst disabledBtn = (componentName, num, borderColor) => {\n  return React.createElement(\n    componentName,\n    { className: 'square primary', borderColor },\n    num,\n  );\n};\n\nexport default disabledBtn;","import React from 'react';\nimport { FormInput } from 'shards-react';\nimport fn from '../../helperFn/boardFunctions';\nimport './square.scss';\nimport boxLookupAssignment from './squareUtility';\nimport tl from './squareBorders/topLeft';\nimport tr from './squareBorders/topRight';\nimport t from './squareBorders/Top';\nimport bl from './squareBorders/bottomLeft';\nimport br from './squareBorders/bottomRight';\nimport b from './squareBorders/Bottom';\nimport l from './squareBorders/Left';\nimport r from './squareBorders/Right';\nimport none from './squareBorders/None';\nimport squareBtnLight from './squareState/Active';\nimport squareBtnDanger from './squareState/Danger';\nimport disabledBtn from './squareState/Disabled';\n\nconst initialSquare = {\n  edit: false,\n  valid: true,\n};\n\nconst rowTopLeft = [0, 3, 6];\nconst topRightRange = [2, 5, 8];\nconst topBorder = [1, 4, 7];\n\nconst boxConditionLookup = disabled => {\n  const boxLookup = {};\n\n  boxLookupAssignment(\n    boxLookup,\n    rowTopLeft,\n    rowTopLeft,\n    disabled,\n    tl.SquareBorderTopLeft,\n    tl.DisabledTopLeft,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    rowTopLeft,\n    topRightRange,\n    disabled,\n    tr.SquareBorderTopRight,\n    tr.DisabledTopRight,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    topRightRange,\n    rowTopLeft,\n    disabled,\n    bl.SquareBorderBottomLeft,\n    bl.DisabledBottomLeft,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    topRightRange,\n    topRightRange,\n    disabled,\n    br.SquareBorderBottomRight,\n    br.DisabledBottomRight,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    rowTopLeft,\n    topBorder,\n    disabled,\n    t.SquareBorderTop,\n    t.DisabledTop,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    topRightRange,\n    topBorder,\n    disabled,\n    b.SquareBorderBottom,\n    b.DisabledBottom,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    topBorder,\n    rowTopLeft,\n    disabled,\n    l.SquareBorderLeft,\n    l.DisabledLeft,\n  );\n\n  boxLookupAssignment(\n    boxLookup,\n    topBorder,\n    topRightRange,\n    disabled,\n    r.SquareBorderRight,\n    r.DisabledRight,\n  );\n\n  return boxLookup;\n};\n\nconst borderColorLookup = (row, col) => {\n  return {\n    [`0 0`]: 'blue',\n    [`3 3`]: 'blue',\n    [`6 6`]: 'blue',\n    [`0 3`]: 'yellow',\n    [`3 6`]: 'yellow',\n    [`6 0`]: 'yellow',\n  }[`${row} ${col}`];\n};\n\nconst setBorderColor = (row, col) => {\n  //box 1,5 or 9\n  return borderColorLookup(row, col) || '#c700ff';\n};\n\nlet btn;\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialSquare;\n  }\n\n  handleKeyPress = async e => {\n    const { row, col, grid } = this.props;\n    const number = e.key;\n\n    //debugger;\n    if (Number(number) !== Number(grid[row][col])) {\n      if (!fn.isValid(grid, row, col, number)) {\n        this.setState({ valid: false });\n      } else {\n        this.setState({ valid: true });\n      }\n    }\n\n    if (e.key === 'Backspace' || e.key === 'Delete') {\n      this.props.pressKey(null, row, col);\n    } else {\n      this.props.pressKey(e.key, row, col);\n      this.handleClick();\n    }\n  };\n\n  handleClick = () => {\n    this.setState(() => ({ edit: !this.state.edit }));\n  };\n\n  render() {\n    const { row, col, number } = this.props;\n    const startRow = parseInt(row / 3) * 3;\n    const startCol = parseInt(col / 3) * 3;\n    const boxColor = setBorderColor(startRow, startCol);\n    const boxLookup = boxConditionLookup()[`${row} ${col}`] || none.noBorder;\n    const boxLookupDisabled =\n      boxConditionLookup(true)[`${row} ${col}`] || none.DisabledNoBorder;\n\n    if (this.props.modify === false) {\n      btn = disabledBtn(boxLookupDisabled, number, boxColor);\n    } else {\n      if (!this.state.edit) {\n        if (!this.state.valid && this.props.number !== null) {\n          btn = squareBtnDanger(boxLookup, number, this.handleClick, boxColor);\n        } else {\n          btn = squareBtnLight(boxLookup, number, this.handleClick, boxColor);\n        }\n      } else {\n        btn = (\n          <FormInput\n            autoFocus={true}\n            onBlur={this.handleClick}\n            type='text'\n            pattern='[0-9]*'\n            inputMode='numeric'\n            onKeyDown={this.handleKeyPress}\n            className='square'\n            value={this.props.number !== null ? this.props.number : ''}\n          ></FormInput>\n        );\n      }\n    }\n\n    return btn;\n  }\n}\n\nexport default Square;\n","import React from 'react';\nimport Square from './Square/square';\n\nconst renderSquare = (grid, num, row, col, handleKeyPress) => {\n  const gridEntry = num;\n\n  if (gridEntry === null || typeof gridEntry === 'string') {\n    return (\n      <Square\n        key={`${row} ${col}`}\n        number={gridEntry}\n        pressKey={handleKeyPress}\n        row={row}\n        col={col}\n        grid={grid}\n        modify={true}\n      />\n    );\n  } else {\n    return (\n      <Square\n        key={`${row} ${col}`}\n        row={row}\n        col={col}\n        number={gridEntry}\n        modify={false}\n      />\n    );\n  }\n};\n\nconst Row = ({ cells = [], rowNum, grid, handleKeyPress }) => {\n  return (\n    <div className='sudoku-row'>\n      {cells.map((cell, cellNum) =>\n        renderSquare(grid, cell, rowNum, cellNum, handleKeyPress),\n      )}\n    </div>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport { Alert } from 'shards-react';\nimport fn from '../helperFn/boardFunctions';\nimport Row from './row';\nimport isEqual from 'lodash.isequal';\nimport cloneDeep from 'lodash.clonedeep';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.interval = null;\n    this.state = {\n      grid: [],\n      displayError: false,\n      beginTimer: 0,\n      timeUntilDismissed: 3,\n    };\n\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.showInvalidKeyPress = this.showInvalidKeyPress.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.clearInterval = this.clearInterval.bind(this);\n  }\n  \n  generateBoard = populateGameGrid => {\n    let gridNewly = fn.createGrid();\n    fn.solve(gridNewly, fn.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n    fn.removingEntries(gridNewly, this.props.difficulty);\n\n    this.setState(\n      {\n        grid: gridNewly,\n      },\n      () => populateGameGrid(this.state.grid),\n    );\n  };\n\n  componentDidMount() {\n    const { populateGameGrid } = this.props;\n    this.generateBoard(populateGameGrid);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      newGame,\n      populateGameGrid,\n      difficulty,\n      solvedGrid,\n      solvedButton,\n    } = this.props;\n\n    const { grid } = this.state;\n\n    if (!isEqual(prevProps, this.props)) {\n      if (prevProps.difficulty !== difficulty || newGame === true) {\n        this.props.setCom(false)\n\n        this.generateBoard(populateGameGrid);\n      } else if (solvedButton === true) {\n        this.setState({\n          grid: solvedGrid,\n        });\n      }\n    } else if (!isEqual(prevState.grid, grid)) {\n      this.props.setCom(fn.verifySudoku(this.state.grid), () =>populateGameGrid(this.state.grid))\n      \n    }\n  }\n\n  showInvalidKeyPress() {\n    this.clearInterval();\n    this.setState({ displayError: true, beginTimer: 0, timeUntilDismissed: 3 });\n    this.interval = setInterval(this.handleTimeChange, 1000);\n  }\n\n  handleTimeChange() {\n    if (this.state.beginTimer < this.state.timeUntilDismissed - 1) {\n      this.setState({\n        ...this.state,\n        ...{ beginTimer: this.state.beginTimer + 1 },\n      });\n      return;\n    }\n\n    this.setState({ ...this.state, ...{ displayError: false } });\n    this.clearInterval();\n  }\n\n  clearInterval() {\n    clearInterval(this.interval);\n    this.interval = null;\n  }\n\n  handleKeyPress(key, row, col) {\n    const gridCopy = cloneDeep(this.state.grid);\n    if (key === null) {\n      gridCopy[row].splice(col, 1, key);\n      this.setState({ grid: gridCopy });\n    } else {\n      const digits = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      if (digits.indexOf(parseInt(key)) === -1) {\n        this.showInvalidKeyPress();\n      } else {\n        gridCopy[row].splice(col, 1, key);\n        this.setState({ grid: gridCopy });\n      }\n    }\n  }\n\n  render() {\n    let error;\n\n    if (this.state.displayError) {\n      error = (\n        <div className='alertConstraint'>\n          <Alert theme='danger' open={this.state.displayError}>\n            Must type a number between 1 and 9\n          </Alert>\n        </div>\n      );\n    }\n    const { grid } = this.state;\n    if(this.props.complete) {\n      this.props.pause();\n    }\n    return (\n      <div className='sudoku'>\n        {error}\n        <div className='winCondition'>\n          {this.props.complete\n            ? 'You have successfully solved the sudoku!'\n            : 'You are not done yet!'}\n        </div>\n        {grid.map((row, rowNum) => (\n          <Row\n            key={rowNum}\n            grid={grid}\n            cells={row}\n            rowNum={rowNum}\n            handleKeyPress={this.handleKeyPress}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react'\nconst data = React.createContext();\nexport default data;","import React, {useState, useContext}from 'react'\nimport { useTimer } from 'use-timer';\nimport Data from '../data/MyContext'\nimport {Button,InputGroup,FormControl,Form} from 'react-bootstrap'\nimport './PlayerName.css'\n\nfunction PlayerName() {\n    const data  = useContext(Data);\n    let greet;\n    const changeHandle = (e) => {\n        data.setName(e.target.value);\n        \n    }\n    let record;\n    const [displayName, setDisplay] = useState('');\n    const { time, start, pause, reset, isRunning } = useTimer();\n    const clickHandle = () => {\n        if(data.name != ''){\n            start();\n            setDisplay(data.name);\n            data.setControlTime({\n                pause:pause,\n                reset:reset,\n                start:start\n            })\n        }\n        \n    }\n    const submitHandle = () => {\n        const account = {\n            player: displayName,\n            time:time\n        }\n        fetch('https://webapp-a9efe.firebaseio.com/player.json',\n            {\n                method:\"POST\",\n                body: JSON.stringify(account),\n                headers: {\"Content-Type\":\"application/JSON\"}\n            }\n        ).then((result) => {\n            alert(`Successfully`)\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    }\n    if(displayName != '') {\n        greet = <h5>Xin Chào! <b> {displayName} </b></h5>\n    } else {\n        greet=null\n    }\n    if(data.complete) {\n        record = <Button variant=\"outline-light\" onClick={submitHandle}>Record</Button>\n    } else {\n        record = null\n    }\n    return (\n        <div className=\"PlayerName\">\n            {greet}\n            <div className=\"enterForm\">\n                {(displayName== '')?<InputGroup id=\"inputF\" className=\"mb-3\" onChange={changeHandle}>\n                    <FormControl\n\n                    placeholder=\"Your Name...\"\n                    aria-label=\"Default\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                    />\n                </InputGroup>: <InputGroup id=\"inputF\" className=\"mb-3\" onChange={changeHandle}>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroup-sizing-default\">Player's Name</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control type=\"text\" placeholder={displayName} readOnly />\n                </InputGroup>\n                }\n                {(displayName == '')?<Button variant=\"outline-light\" onClick={clickHandle}>Submit</Button>:null}\n                {record}\n            </div>\n            \n            {(displayName != '')?<div className=\"Time\">\n                <p>Elapsed time: {time}</p>\n            </div>:null}\n        </div>\n    )\n}\n\nexport default PlayerName\n","import React, {useEffect,useState} from 'react'\nimport {Table} from 'react-bootstrap'\nimport './Rank.css'\n\nfunction Rank() {\n    const [player,setPlayer] = useState([]);\n    const allPlayer = [];\n    useEffect(() => {\n        fetch('https://webapp-a9efe.firebaseio.com/player.json')\n        .then((res)=> res.json())\n        .then((resData) => {\n            var count = 0;\n            for(const key in resData) {\n                count++;\n                allPlayer.push(\n                        {\n                            id:key,\n                            player:resData[key].player,\n                            time:resData[key].time\n                        }\n                    )\n            }\n            for(let i = 0; i < count; i++){\n                for(let j = 0; j < count;j++){\n                    if(allPlayer[i].time < allPlayer[j].time){\n                        var temp = allPlayer[i];\n                        allPlayer[i]= allPlayer[j];\n                        allPlayer[j] = temp;\n                    }\n                }\n            }\n            setPlayer(allPlayer)\n        })\n        .catch((err) => {\n            console.log(err);\n        })\n    });\n    return (\n        <div className=\"Rank\">\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                    <th>#</th>\n                    <th>Player's Name</th>\n                    <th>Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        player.map((a,id) => {\n                            return (<tr>\n                                <td>{id+1}</td>\n                                <td>{a.player}</td>\n                                <td>{a.time}</td>\n                            </tr>)\n                        })\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n\nexport default Rank\n","import React from 'react';\nimport Board from './board';\nimport PlayerName from './PlayerName/PlayerName'\nimport Rank from './Rank/Rank'\nimport {Button,Alert} from 'react-bootstrap'\nimport {\n  Container,\n  Row,\n  Col,\n  Button1,\n  Modal,\n  ModalBody,\n  ModalHeader,\n  FormRadio,\n} from 'shards-react';\nimport MyContext from './data/MyContext'\nimport fn from '../helperFn/boardFunctions';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst shuffled = [1, 2, 3, 4, 5, 6, 7, 8, 9];\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      openCredits: false,\n      openDifficulty: false,\n      openRules: false,\n      openNewGame: false,\n      difficulty: 'Normal',\n      newGame: false,\n      solvedButton: false,\n      grid: [],\n      copyGrid: [],\n      name:'',\n      submit:false,\n      controlTime: {\n        pause: ()=>{},\n        reset: ()=>{},\n        start: () =>{}\n      },\n      complete:false,\n      count: 3,\n      openSolve:false\n      \n    };\n  }\n  setControlTime = (value) => {\n    this.setState({\n      ...this.state,\n      submit:true,\n      controlTime:{\n        pause:value.pause,\n        reset:value.reset,\n        start:value.start\n      }\n    })\n  }\n  setName = (name) => {\n    this.setState({\n      ...this.state,\n      name: name\n    })\n  }\n  \n  changeDifficulty = diff => {\n    this.setState(() => ({ difficulty: diff }));\n  };\n  \n  newGameAccepted = () => {\n    this.setState(() => ({\n      newGame: true,\n      openNewGame: !this.state.openNewGame,\n    }));\n    this.state.controlTime.reset();\n    this.state.controlTime.start();\n  };\n\n  handleDifficultyClick = () => {\n    this.setState(() => ({ openDifficulty: !this.state.openDifficulty }));\n  };\n\n  handleCreditsClick = () => {\n    this.setState(() => ({ openCredits: !this.state.openCredits }));\n  };\n\n  handleRulesClick = () => {\n    this.setState(() => ({ openRules: !this.state.openRules }));\n  };\n\n  handleNewGameClick = () => {\n    this.setState(() => ({ openNewGame: !this.state.openNewGame }));\n  };\n  helpButton = () =>{\n    this.setState({\n      ...this.state,\n      openSolve:true\n    })\n  }\n  handleSudokuSolver = () => {\n    \n    let currentGrid = cloneDeep(this.state.grid);\n    let gridCopy = cloneDeep(this.state.grid);\n    gridCopy = gridCopy.map(row =>\n      row.map(el => {\n        return typeof el === 'string' ? null : el;\n      }),\n    );\n    currentGrid = currentGrid.map(row =>\n      row.map(el => {\n        return typeof el === 'string' ? null : el;\n      }),\n    );\n    fn.solve(gridCopy,shuffled)\n    let count = 0;\n    for(let row = 0 ; row < 9 ; row++ ){\n      if(count > 0){\n        break;\n      }\n      for(let col = 0 ; col <9; col++){\n        let row1 = parseInt(Math.random()*10 -1);\n        let col1 = parseInt(Math.random()*10 -1);\n        if(currentGrid[row1][col1] === null){\n          count++;\n          currentGrid[row1][col1] = gridCopy[row1][col1];\n          break;\n        }\n      }\n      \n    }\n    this.setState({\n      ...this.state,\n      count: this.state.count-1,\n      openSolve:false,\n      grid: currentGrid,\n      solvedButton: true\n    });\n  };\n  populateGameGrid = grid => {\n    this.setState({ grid: grid, solvedButton: false, newGame: false });\n  };\n  setCom = (value) => {\n    this.setState({\n      ...this.state,\n      complete:value\n    })\n  }\n  noSolve = () => {\n    this.setState({\n      ...this.state,\n      openSolve:false\n    })\n  }\n  changeName = () => {\n    \n    this.setState({\n      submit:false,\n      name:''\n    })\n  }\n  render() {\n    return (\n      <MyContext.Provider value={{\n        name:this.state.name,\n        setName:this.setName,\n        submit: this.state.submit,\n        setControlTime:this.setControlTime,\n        controlTime:this.state.controlTime,\n        complete:this.state.complete,\n      }}>\n        <div className='game'>\n        <div className='game-title'>\n          <p className='title'>SUDOKU!</p>\n        </div>\n        \n        {(this.state.submit)?<div className='game-board'>\n            <Board\n              difficulty={this.state.difficulty}\n              newGame={this.state.newGame}\n              populateGameGrid={this.populateGameGrid}\n              solvedButton={this.state.solvedButton}\n              solvedGrid={this.state.grid}\n              pause ={this.state.controlTime.pause}\n              complete = {this.state.complete}\n              setCom = {this.setCom}\n              \n            />\n        </div>:null}\n        <PlayerName/>\n        <Rank />\n        <Container className='dr-example-container'>\n          <Row>\n            <Col>\n              <Button onClick={this.handleDifficultyClick} className='navBar'>\n                Difficulty\n              </Button>\n            </Col>\n            <Col>\n              {\n                (this.state.submit)?<Button onClick={this.helpButton} className='navBar'>\n                Solve\n              </Button>:<Button className='navBar'>\n                Solve\n              </Button>\n              }\n            </Col>\n            <Col>\n              <Button onClick={this.handleRulesClick} className='navBar'>\n                How To Play\n              </Button>\n            </Col>\n            <Col>\n              <Button onClick={this.handleNewGameClick} className='navBar'>\n                New Game\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n\n        <Modal\n          open={this.state.openDifficulty}\n          toggle={this.handleDifficultyClick}\n        >\n          <ModalHeader>Change Difficulty</ModalHeader>\n          <ModalBody>\n            <FormRadio\n              checked={this.state.difficulty === 'Beginner'}\n              onChange={() => {\n                this.changeDifficulty('Beginner');\n              }}\n            >\n              Beginner\n            </FormRadio>\n            <FormRadio\n              checked={this.state.difficulty === 'Easy'}\n              onChange={() => {\n                this.changeDifficulty('Easy');\n              }}\n            >\n              Easy\n            </FormRadio>\n            <FormRadio\n              checked={this.state.difficulty === 'Normal'}\n              onChange={() => {\n                this.changeDifficulty('Normal');\n              }}\n            >\n              Normal\n            </FormRadio>\n            <FormRadio\n              checked={this.state.difficulty === 'Hard'}\n              onChange={() => {\n                this.changeDifficulty('Hard');\n              }}\n            >\n              Hard\n            </FormRadio>\n            <Button onClick={this.handleDifficultyClick}>Accept</Button>\n          </ModalBody>\n        </Modal>\n\n        <Modal open={this.state.openRules} toggle={this.handleRulesClick}>\n          <ModalHeader>Welcome to Sudoku!</ModalHeader>\n          <ModalBody>\n            <div className='rulesText'>\n              <p>\n                1. Only one number from 1-9 is allowed on each row<br></br>\n              </p>\n              <p>\n                2. Only one number from 1-9 is allowed on each column<br></br>\n              </p>\n              <p>\n                3. Only one number from 1-9 is allowed in each grid<br></br>\n              </p>\n              <p>\n                The goal of the game is to find the missing numbers in the grid\n                such that all three of these conditions are satisfied and if\n                they are then you have successfully completed the puzzle.\n                <br></br>\n              </p>\n              <p>\n                If not, then you must backtrack and find out which numbers are\n                inserted incorrectly.<br></br>\n              </p>\n              <p>\n                You will know if the number is inserted incorrectly when the box\n                is highlighted red.<br></br>\n              </p>\n            </div>\n            <Button onClick={this.handleRulesClick}>Got it!</Button>\n          </ModalBody>\n        </Modal>\n\n        <Modal open={this.state.openNewGame} toggle={this.handleNewGameClick}>\n          <ModalBody>\n            <div className='newGameText'>\n              Are you sure?<br></br>\n            </div>\n            <div className='flexButtons'>\n              <Button onClick={this.newGameAccepted}>Yes</Button>\n              <Button onClick={this.handleNewGameClick}>No</Button>\n            </div>\n          </ModalBody>\n        </Modal>\n        <Modal open={this.state.openSolve} toggle={this.noSolve} >\n          <ModalBody>\n            <div className='newGameText'>\n              {(this.state.count!=0)?<p>Are you sure? You have {this.state.count} times<br></br></p>:\n              <Alert variant=\"danger\">\n                I can't help you from now!!\n              </Alert>\n            }\n            </div>\n            <div className='flexButtons'>\n              {(this.state.count!= 0)?<Button onClick={this.handleSudokuSolver}>Yes</Button>:<Button onClick={this.noSolve}>No</Button>}\n              <Button onClick={this.noSolve}>No</Button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport './index.css';\nimport Game from './Components/game';\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}